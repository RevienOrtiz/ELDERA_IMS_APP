<meta name="csrf-token" content="{{ csrf_token() }}">

<x-sidebar>
  <x-header title="Events" icon="fas fa-calendar-alt">
    @include('message.popup_message')
    <div class="main">
        <!-- Google Calendar Style Container -->
        <div class="google-calendar">
            <!-- Calendar Header -->
            <div class="calendar-header">
                <div class="header-left">
                    <div class="calendar-nav">
                        <button class="nav-btn" onclick="previousMonth()">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="nav-btn" onclick="nextMonth()">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                        <button class="today-btn" onclick="goToToday()">Today</button>
                    </div>
                    <div class="calendar-title-container">
                        <div class="calendar-title" id="calendarTitle">May 2025</div>
                        <div class="calendar-controls">
                            <select id="monthSelector" onchange="changeMonth()">
                                <option value="0">January</option>
                                <option value="1">February</option>
                                <option value="2">March</option>
                                <option value="3">April</option>
                                <option value="4" selected>May</option>
                                <option value="5">June</option>
                                <option value="6">July</option>
                                <option value="7">August</option>
                                <option value="8">September</option>
                                <option value="9">October</option>
                                <option value="10">November</option>
                                <option value="11">December</option>
                            </select>
                            <select id="yearSelector" onchange="changeYear()">
                                <option value="2024">2024</option>
                                <option value="2025" selected>2025</option>
                                <option value="2026">2026</option>
                                <option value="2027">2027</option>
                                <option value="2028">2028</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="header-right">
                    <button onclick="openEventModal()" class="add-event-btn">
                        <i class="fas fa-plus"></i>
                        Add Event
                    </button>
                </div>
            </div>
            
            <!-- Calendar Body -->
            <div class="calendar-body">
                <!-- Month View -->
                <div id="monthView" class="calendar-view active">
                    <div class="calendar-grid">
                        <div class="calendar-weekdays">
                            <div class="weekday">Sun</div>
                            <div class="weekday">Mon</div>
                            <div class="weekday">Tue</div>
                            <div class="weekday">Wed</div>
                            <div class="weekday">Thu</div>
                            <div class="weekday">Fri</div>
                            <div class="weekday">Sat</div>
                        </div>
                        <div class="calendar-days" id="mainCalendarDays">
                            <!-- Calendar days will be generated by JavaScript -->
                        </div>
                    </div>
                </div>

                <!-- Week View -->
                <div id="weekView" class="calendar-view">
                    <div class="week-header">
                        <div class="time-column">Time</div>
                        <div class="day-columns" id="weekDays">
                            <!-- Week days will be generated by JavaScript -->
                        </div>
                    </div>
                    <div class="week-body" id="weekBody">
                        <!-- Week view will be generated by JavaScript -->
                    </div>
                </div>

                <!-- Day View -->
                <div id="dayView" class="calendar-view">
                    <div class="day-header" id="dayHeader">
                        <!-- Day header will be generated by JavaScript -->
                    </div>
                    <div class="day-body" id="dayBody">
                        <!-- Day view will be generated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>

    <!-- Event Modal -->
    <div id="eventModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">Add New Event</h2>
                <button class="close-btn" onclick="closeEventModal()">
                        Ã—
                    </button>
                </div>
                <div class="modal-body">
                <form class="event-form" id="eventForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="eventTitle" class="form-label fw-semibold">Event Title</label>
                            <input type="text" class="form-control" id="eventTitle" placeholder="Enter event title" required>
                        </div>
                        <div class="col-md-6">
                            <label for="eventType" class="form-label fw-semibold">Event Type</label>
                            <select class="form-select" id="eventType" required>
                                <option value="">Select Event Type</option>
                                <option value="general">General</option>
                                <option value="pension">Pension</option>
                                <option value="health">Health-related</option>
                                <option value="id_claiming">ID Claiming</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="eventDate" class="form-label fw-semibold">Date</label>
                            <input type="date" class="form-control" id="eventDate" min="{{ date('Y-m-d') }}" required>
                        </div>
                        <div class="col-md-6">
                            <label for="eventTime" class="form-label fw-semibold">Time</label>
                            <input type="time" class="form-control" id="eventTime" required>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="eventEndTime" class="form-label fw-semibold">End Time</label>
                            <input type="time" class="form-control" id="eventEndTime">
                        </div>
                        <div class="col-md-6">
                            <!-- Empty column for alignment -->
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="eventDescription" class="form-label fw-semibold">Description</label>
                        <textarea class="form-control" id="eventDescription" rows="3" placeholder="Enter event description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="eventLocation" class="form-label fw-semibold">Location</label>
                        <input type="text" class="form-control" id="eventLocation" placeholder="Enter location">
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="eventOrganizer" class="form-label fw-semibold">Organizer</label>
                            <input type="text" class="form-control" id="eventOrganizer" placeholder="Enter organizer" value="LCSCF Office">
                        </div>
                        <div class="col-md-6">
                            <label for="eventContactPerson" class="form-label fw-semibold">Contact Person</label>
                            <input type="text" class="form-control" id="eventContactPerson" placeholder="Enter contact person" value="Event Coordinator">
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="eventContactNumber" class="form-label fw-semibold">Contact Number</label>
                        <input type="text" class="form-control" id="eventContactNumber" placeholder="Enter contact number" value="000-000-0000">
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-semibold">Target Recipients Selection</label>
                        <p class="text-muted small mb-3">Choose who should receive notifications for this event</p>
                        
                        <div class="d-flex flex-column gap-3">
                            <!-- All Senior Citizens Option -->
                            <div class="card">
                                <div class="card-body">
                                    <div class="form-check">
                                        <input type="checkbox" id="recipients_all" name="recipientTypes[]" value="all" class="form-check-input" checked>
                                        <label for="recipients_all" class="form-check-label fw-semibold">All Senior Citizens</label>
                                    </div>
                                    <p class="text-muted small mb-0 ms-4">Send notification to every registered senior citizen</p>
                                </div>
                            </div>

                            <!-- By Barangay Option -->
                            <div class="card">
                                <div class="card-body">
                                    <div class="form-check">
                                        <input type="checkbox" id="recipients_barangay" name="recipientTypes[]" value="barangay" class="form-check-input">
                                        <label for="recipients_barangay" class="form-check-label fw-semibold">Filter by Barangay</label>
                                    </div>
                                    <p class="text-muted small mb-3 ms-4">Send notification to seniors in selected barangay(s)</p>
                                    <div id="barangaySelection" class="ms-4" style="display: none;">
                                        <h6 class="mb-3">Select Barangays</h6>
                                        <div class="row g-2">
                                            <div class="col-12 mb-2">
                                                <div class="form-check">
                                                    <input type="checkbox" id="barangay_all" name="selectedBarangays[]" value="all" class="form-check-input">
                                                    <label for="barangay_all" class="form-check-label fw-semibold">All Barangays</label>
                                                </div>
                                            </div>
                                            @foreach([
                                                'aliwekwek', 'baay', 'balangobong', 'balococ', 'bantayan', 'basing', 'capandanan',
                                                'domalandan-center', 'domalandan-east', 'domalandan-west', 'dorongan', 'dulag',
                                                'estanza', 'lasip', 'libsong-east', 'libsong-west', 'malawa', 'malimpuec',
                                                'maniboc', 'matalava', 'naguelguel', 'namolan', 'pangapisan-north', 'pangapisan-sur',
                                                'poblacion', 'quibaol', 'rosario', 'sabangan', 'talogtog', 'tonton', 'tumbar', 'wawa'
                                            ] as $barangay)
                                                <div class="col-md-4 col-sm-6">
                                                    <div class="form-check">
                                                        <input type="checkbox" id="barangay_{{ $barangay }}" name="selectedBarangays[]" value="{{ $barangay }}" class="form-check-input">
                                                        <label for="barangay_{{ $barangay }}" class="form-check-label">{{ ucwords(str_replace('-', ' ', $barangay)) }}</label>
                                                    </div>
                                                </div>
                                            @endforeach
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- By Category Option -->
                            <div class="card">
                                <div class="card-body">
                                    <div class="form-check">
                                        <input type="checkbox" id="recipients_category" name="recipientTypes[]" value="category" class="form-check-input">
                                        <label for="recipients_category" class="form-check-label fw-semibold">Filter by Category</label>
                                    </div>
                                    <p class="text-muted small mb-3 ms-4">Auto-select seniors based on system records</p>
                                    <div id="categorySelection" class="ms-4" style="display: none;">
                                        <h6 class="mb-3">Select Categories</h6>
                                        <div class="d-flex flex-column gap-2">
                                            <div class="form-check">
                                                <input type="checkbox" id="category_pension" name="selectedCategories[]" value="pension" class="form-check-input">
                                                <label for="category_pension" class="form-check-label">
                                                    <strong>Pension Recipients</strong><br>
                                                    <small class="text-muted">Seniors listed in the pension table</small>
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                <input type="checkbox" id="category_id" name="selectedCategories[]" value="id_applicants" class="form-check-input">
                                                <label for="category_id" class="form-check-label">
                                                    <strong>ID Applicants</strong><br>
                                                    <small class="text-muted">Seniors from the ID application table</small>
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                <input type="checkbox" id="category_benefits" name="selectedCategories[]" value="benefit_applicants" class="form-check-input">
                                                <label for="category_benefits" class="form-check-label">
                                                    <strong>Benefit Applicants</strong><br>
                                                    <small class="text-muted">Seniors from the benefits table</small>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="eventLogo" class="form-label fw-semibold">Event Logo</label>
                        <input type="file" class="form-control" id="eventLogo" accept="image/*">
                        <div class="form-text">Upload an image file (JPG, PNG, GIF)</div>
                    </div>
                    <div class="d-flex justify-content-end gap-2 pt-3 border-top">
                        <button type="button" class="btn btn-secondary" onclick="closeEventModal()">Cancel</button>
                        <button type="submit" class="btn btn-primary" style="background-color: #e31575; border-color: #e31575;">Save Event</button>
                    </div>
                </form>
                </div>
        </div>
    </div>

    {{-- <footer class="main-footer">
        <img src="{{ asset('images/Bagong_Pilipinas.png') }}" alt="Bagong Pilipinas" class="footer-logo">
    </footer> --}}

    <style>
        body { margin: 0; }

        .main {
            margin-left: 250px;
            margin-top: 60px; /* offset below fixed header */
            height: calc(100vh - 60px);
            padding: 0;
            display: flex;
            flex-direction: column;
            overflow: hidden; /* prevent extra scroll whitespace */
        }

        .google-calendar {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: #fff;
            height: 100%;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .calendar-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 12px 24px;
            border-bottom: 1px solid #dadce0;
            background: #fff;
            min-height: 64px;
        }

        .header-left {
            display: flex;
            align-items: center;
            gap: 24px;
        }
        
        .calendar-nav {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .nav-btn {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            padding: 8px;
            border-radius: 4px;
            transition: all 0.2s;
            color: #5f6368;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .nav-btn:hover {
            background: #f1f3f4;
            color: #202124;
        }
        
        .today-btn {
            background: #e31575;
            color: #ffffff;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            transition: background 0.2s;
            margin-left: 8px;
        }
        
        .today-btn:hover {
            background: #FFB7CE;
        }
        
        .calendar-title-container {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
        }
        
        .calendar-title {
            font-size: 22px;
            font-weight: 400;
            color: #3c4043;
            margin-left: 8px;
        }
        
        .calendar-controls {
            display: flex;
            gap: 8px;
            margin-left: 8px;
        }
        
        .calendar-controls select {
            padding: 4px 8px;
            border: 1px solid #dadce0;
            border-radius: 4px;
            font-size: 14px;
            background: white;
            color: #3c4043;
        }
        
        .calendar-controls select:focus {
            outline: none;
            border-color: #1a73e8;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 16px;
        }
        
        .view-selector {
            display: flex;
            gap: 0;
            border: 1px solid #dadce0;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .view-btn {
            background: #fff;
            border: none;
            padding: 8px 16px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s;
            color: #5f6368;
            border-right: 1px solid #dadce0;
        }

        .view-btn:last-child {
            border-right: none;
        }
        
        .view-btn.active {
            background: #e31575;
            color: #222;
        }
        
        .view-btn:hover:not(.active) {
            background: #f1f3f4;
        }

        .add-event-btn {
            background: #e31575;
            color: #ffffff;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: background 0.2s;
        }

        .add-event-btn:hover {
            background: #FFB7CE;
        }

        .calendar-body {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .calendar-view {
            display: none;
            flex: 1;
        }

        .calendar-view.active {
            display: flex;
            flex-direction: column;
        }

        .calendar-grid {
            flex: 1;
            display: flex;
            flex-direction: column;
            min-height: 0;
        }

        .calendar-weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            background: #fff;
            border-bottom: 1px solid #dadce0;
            min-height: 32px;
        }

        .weekday {
            padding: 8px 4px;
            text-align: center;
            font-weight: 500;
            color: #70757a;
            font-size: 11px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #mainCalendarDays {
            flex: 1;
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-template-rows: repeat(6, 1fr);
            min-height: 0;
        }

        .calendar-day {
            border-right: 1px solid #dadce0;
            border-bottom: 1px solid #dadce0;
            padding: 4px;
            position: relative;
            cursor: pointer;
            transition: background 0.2s;
            background: #fff;
            display: flex;
            flex-direction: column;
            min-height: 0;
        }

        .calendar-day:hover {
            background: #f8f9fa;
        }

        .calendar-day.other-month {
            background: #fafafa;
        }

        .calendar-day.other-month .day-number {
            color: #dadce0;
        }

        .calendar-day.today {
            background: #e8f0fe;
        }

        .calendar-day.today .day-number {
            color: #222;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 2px;
        }

        .day-number {
            font-weight: 500;
            color: #3c4043;
            font-size: 12px;
            padding: 2px 6px;
            background: transparent;
            border-radius: 3px;
            display: inline-block;
            margin: 1px;
            text-align: left;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
            line-height: 1.2;
        }

        .day-events {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 1px;
            margin-top: 2px;
            min-height: 0;
        }

        .day-event {
            padding: 2px 4px;
            border-radius: 3px;
            font-size: 10px;
            color: white;
            cursor: pointer;
            line-height: 1.2;
            margin: 1px 0;
            display: flex;
            flex-direction: column;
            gap: 2px;
        }

        .event-title {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .event-actions {
            display: flex;
            justify-content: flex-end;
        }

        .attendance-link {
            color: white;
            text-decoration: none;
            font-size: 8px;
            padding: 2px 4px;
            border-radius: 3px;
            background: rgba(0, 0, 0, 0.4);
            transition: all 0.2s;
            font-weight: bold;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .attendance-link:hover {
            background: rgba(0, 0, 0, 0.7);
            color: white;
            transform: scale(1.05);
        }

        .event-attendance-link {
            color: white;
            text-decoration: none;
            font-size: 10px;
            margin-left: 8px;
            transition: all 0.2s;
            font-weight: bold;
            padding: 2px 4px;
            border-radius: 3px;
            background: rgba(0, 0, 0, 0.3);
        }

        .event-attendance-link:hover {
            color: white;
            transform: scale(1.1);
            background: rgba(0, 0, 0, 0.5);
        }

        .day-event.general {
            background: #42F477FF;
        }

        .day-event.health {
            background: #ea4335;
        }

        .day-event.pension {
            background: #4285f4;
        }

        .day-event.id_claiming {
            background: #ffc107 !important;
        }

        /* Full-cell coloring for days with events */
        .calendar-day.has-event { color: #fff; }
        .calendar-day.has-event .day-number { color: #fff; }
        .calendar-day.general-bg { background: #42F477FF; }
        .calendar-day.health-bg { background: #ea4335; }
        .calendar-day.pension-bg { background: #4285f4; }
        .calendar-day.id_claiming-bg { background: #ffc107 !important; }
        .calendar-day.has-event .day-events { display: none; }
        .calendar-day .event-label {
            position: absolute;
            left: 4px;
            right: 4px;
            bottom: 4px;
            background: rgba(0,0,0,0.25);
            color: #fff;
            font-size: 10px;
            padding: 2px 4px;
            border-radius: 3px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main {
                margin-left: 0;
            }

            .calendar-header {
                flex-direction: column;
                gap: 16px;
                align-items: stretch;
            }

            .header-left, .header-right {
                justify-content: center;
            }

            .add-event-btn {
                align-self: center;
            }
        }

        /* Google Calendar specific styling */
        .calendar-day {
            position: relative;
        }

        .calendar-day::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: transparent;
            pointer-events: none;
        }

        .calendar-day:hover::before {
            background: rgba(26, 115, 232, 0.04);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 0;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid #e0e0e0;
            background: #e31575;
            color: white;
            border-radius: 8px 8px 0 0;
        }
        
        .modal-header h2 {
            margin: 0;
            color: white;
            font-size: 18px;
            font-weight: 600;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: white;
            padding: 5px;
            border-radius: 4px;
            transition: background 0.2s;
        }
        
        .close-btn:hover {
            background: rgba(255,255,255,0.2);
        }
        
        .event-form {
            padding: 20px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }
        
        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
            transition: border-color 0.2s ease;
            box-sizing: border-box;
            background: white;
        }
        
        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: #e31575;
        }
        
        .form-textarea {
            resize: vertical;
            min-height: 80px;
        }
        
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px solid #ddd;
        }
        
        .cancel-btn {
            background: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s ease;
        }
        
        .cancel-btn:hover {
            background: #545b62;
        }
        
        .save-btn {
            background: #e31575;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.2s ease;
        }
        
        .save-btn:hover {
            background: #c41e3a;
        }
        
        .main-footer {
            background: #fff;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 -1px 4px #0001;
            position: fixed;
            bottom: 0;
            left: 250px;
            right: 0;
            height: 20px;
            z-index: 1;
        }

        .footer-logo {
            height: 50px;
            display: block;
            margin: 0 auto;
        }

        /* Checkbox Group Styling */
.checkbox-group {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 8px;
    margin-top: 10px;
    max-height: 200px;
    overflow-y: auto;
    padding: 10px;
    background: #fafafa;
    border-radius: 4px;
    border: 1px solid #e0e0e0;
}

.checkbox-item {
    display: flex;
    align-items: center;
    background: white;
    padding: 6px 10px;
    border-radius: 4px;
    border: 1px solid #e0e0e0;
    cursor: pointer;
    font-size: 13px;
}

.checkbox-item:hover {
    background: #f0f0f0;
}

.checkbox-item:has(input:checked) {
    background: #fdf2f8;
    border-color: #e31575;
}

.checkbox-input {
    margin: 0;
    margin-right: 8px;
    width: 16px;
    height: 16px;
    cursor: pointer;
    accent-color: #e31575;
}

.checkbox-label {
    cursor: pointer;
    font-size: 13px;
    color: #333;
    user-select: none;
    flex: 1;
    margin: 0;
}

.checkbox-input:checked + .checkbox-label {
    font-weight: 600;
    color: #e31575;
}

/* Special styling for "All Barangays" checkbox */
.checkbox-item:has(input[value="all"]) {
    background: #fef7ff;
    border-color: #e31575;
    font-weight: 600;
    grid-column: 1 / -1;
}

.checkbox-item:has(input[value="all"]:checked) {
    background: #fdf2f8;
    border-color: #e31575;
}

/* Radio Group Styling */
.radio-group {
    display: flex;
    gap: 15px;
    margin-top: 10px;
    flex-wrap: wrap;
    margin-bottom: 10px;
}

.radio-item {
    display: flex;
    align-items: center;
    background: #fafafa;
    padding: 8px 12px;
    border-radius: 4px;
    border: 1px solid #e0e0e0;
    cursor: pointer;
    gap: 6px;
    transition: background-color 0.2s ease;
}

.radio-item:hover {
    background: #e9ecef;
}

.radio-item:has(input:checked) {
    background: #fdf2f8;
    border-color: #e31575;
}

.radio-input {
    margin: 0;
    width: 16px;
    height: 16px;
    cursor: pointer;
    accent-color: #e31575;
}

.radio-label {
    cursor: pointer;
    font-size: 14px;
    color: #333;
    user-select: none;
    margin: 0;
}

.radio-input:checked + .radio-label {
    font-weight: 600;
    color: #e31575;
}

/* Recipient Selection Container */
.recipient-selection-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 10px;
}

.recipient-option {
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    padding: 15px;
    background: #fff;
    transition: border-color 0.2s ease;
}

.recipient-option:hover {
    border-color: #e31575;
}

.recipient-option:has(input:checked) {
    border-color: #e31575;
    background: linear-gradient(135deg, #fefcff 0%, #fdf2f8 100%);
    box-shadow: 0 4px 12px rgba(227, 21, 117, 0.15);
}

.recipient-option .radio-input {
    margin: 0;
    margin-right: 12px;
    width: 20px;
    height: 20px;
    cursor: pointer;
    accent-color: #e31575;
}

.recipient-option .radio-label {
    font-size: 16px;
    font-weight: 600;
    color: #2c3e50;
    cursor: pointer;
    margin: 0;
    display: inline-block;
    margin-bottom: 5px;
}

.option-description {
    color: #666;
    font-size: 14px;
    margin: 8px 0 0 32px;
    line-height: 1.4;
}

.sub-selection {
    margin-top: 10px;
    margin-left: 32px;
    padding: 10px;
    background: #f8f9fa;
    border-radius: 4px;
    border: 1px solid #ddd;
}

/* Category Options Styling */
.category-options {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.category-item {
    display: flex;
    align-items: flex-start;
    background: white;
    padding: 10px 12px;
    border-radius: 4px;
    border: 1px solid #ddd;
    transition: background-color 0.2s ease;
    cursor: pointer;
}

.category-item:hover {
    background: #f0f0f0;
}

.category-item:has(input:checked) {
    background: #d4edda;
    border-color: #28a745;
}

.category-item .radio-input {
    margin: 0;
    margin-right: 12px;
    margin-top: 2px;
    width: 16px;
    height: 16px;
    cursor: pointer;
    accent-color: #e31575;
}

.category-label {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    gap: 4px;
    flex: 1;
}

.category-label strong {
    font-size: 14px;
    font-weight: 600;
    color: #333;
}

.category-desc {
    font-size: 12px;
    color: #666;
    font-weight: normal;
}

/* Specific Seniors Section */
.specific-seniors-section {
    margin-top: 20px;
    padding: 20px;
    border: 2px solid #e3f2fd;
    border-radius: 12px;
    background: linear-gradient(135deg, #f8fdff 0%, #e3f2fd 100%);
    box-shadow: 0 2px 8px rgba(33, 150, 243, 0.1);
}

.seniors-selection {
    margin-top: 15px;
}

.seniors-selection input[type="text"] {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 14px;
    transition: all 0.3s ease;
    background: white;
}

.seniors-selection input[type="text"]:focus {
    outline: none;
    border-color: #e31575;
    box-shadow: 0 0 0 3px rgba(255, 214, 0, 0.1);
}

.seniors-list {
    max-height: 250px;
    overflow-y: auto;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    padding: 8px;
    background-color: white;
    margin-top: 10px;
}

.senior-item {
    display: flex;
    align-items: center;
    padding: 10px 12px;
    border-bottom: 1px solid #f0f0f0;
    border-radius: 6px;
    margin-bottom: 4px;
    transition: all 0.2s ease;
}

.senior-item:hover {
    background-color: #f5f5f5;
}

.senior-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

.senior-item:has(input:checked) {
    background-color: #fff9c4;
    border-color: #e31575;
}

.senior-checkbox {
    margin-right: 12px;
    width: 16px;
    height: 16px;
    cursor: pointer;
    accent-color: #e31575;
}

.senior-name {
    font-size: 14px;
    font-weight: 500;
    color: #333;
    cursor: pointer;
    flex: 1;
}


        /* Responsive Design */
        @media (max-width: 768px) {
            .main {
                margin-left: 0;
                margin-top: 60px;
                height: calc(100vh - 60px);
                padding: 0;
            }

            .calendar-header {
                flex-direction: column;
                gap: 16px;
                align-items: stretch;
            }

            .calendar-nav, .view-selector {
                justify-content: center;
            }

            .add-event-btn {
                align-self: center;
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .modal-content {
                width: 95%;
                margin: 10% auto;
            }
        }
        
        .event-view-link, .view-link {
            color: #fff;
            text-decoration: none;
            font-size: 11px;
            opacity: 0.8;
            transition: opacity 0.2s ease;
        }
        
        .event-view-link:hover, .view-link:hover {
            opacity: 1;
            text-decoration: underline;
        }
    </style>

    <script>
        let currentDate = new Date(); // Set to current date
        let currentView = 'month';
        let events = {!! json_encode($events->map(function($event) {
            return [
                'id' => $event->id,
                'title' => $event->title,
                'type' => $event->event_type,
                'date' => $event->event_date->format('Y-m-d'),
                'time' => $event->start_time->format('H:i'),
                'end_time' => $event->end_time ? $event->end_time->format('H:i') : null,
                'description' => $event->description,
                'location' => $event->location,
                'status' => $event->status
            ];
        })) !!};

        // Sample seniors data (in real application, this would come from database)
        const seniorsData = [
            { id: 1, name: 'Juan Dela Cruz', barangay: 'poblacion' },
            { id: 2, name: 'Maria Santos', barangay: 'malawa' },
            { id: 3, name: 'Pedro Garcia', barangay: 'estanza' },
            { id: 4, name: 'Ana Rodriguez', barangay: 'lasip' },
            { id: 5, name: 'Jose Martinez', barangay: 'basing' },
            { id: 6, name: 'Carmen Lopez', barangay: 'rosario' },
            { id: 7, name: 'Roberto Fernandez', barangay: 'tonton' },
            { id: 8, name: 'Elena Gonzalez', barangay: 'wawa' }
        ];

        // Initialize calendar
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Calendar initialization started');
            
            // Check if the calendar container exists
            const calendarContainer = document.getElementById('mainCalendarDays');
            if (!calendarContainer) {
                console.error('Calendar container not found!');
                return;
            }
            
            console.log('Calendar container found:', calendarContainer);
            renderCalendar();
            console.log('Calendar rendered');
            
            // Initialize recipient selection functionality
            initializeRecipientSelection();
        });

        function initializeRecipientSelection() {
            const recipientCheckboxes = document.querySelectorAll('input[name="recipientTypes[]"]');
            const barangaySelection = document.getElementById('barangaySelection');
            const categorySelection = document.getElementById('categorySelection');
            const allSeniorsCheckbox = document.getElementById('recipients_all');
            const barangayCheckbox = document.getElementById('recipients_barangay');
            const categoryCheckbox = document.getElementById('recipients_category');
            const allBarangaysCheckbox = document.getElementById('barangay_all');
            
            // Handle recipient type changes
            recipientCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    // Show/hide relevant sub-selections based on checked state
                    if (this.value === 'barangay') {
                        barangaySelection.style.display = this.checked ? 'block' : 'none';
                    } else if (this.value === 'category') {
                        categorySelection.style.display = this.checked ? 'block' : 'none';
                    }
                    
                    // If "All Senior Citizens" is checked, uncheck other options
                    if (this.value === 'all' && this.checked) {
                        barangayCheckbox.checked = false;
                        categoryCheckbox.checked = false;
                        barangaySelection.style.display = 'none';
                        categorySelection.style.display = 'none';
                    }
                    
                    // If other options are checked, uncheck "All Senior Citizens"
                    if ((this.value === 'barangay' || this.value === 'category') && this.checked) {
                        allSeniorsCheckbox.checked = false;
                    }
                });
            });
            
            // Handle "All Barangays" checkbox
            if (allBarangaysCheckbox) {
                allBarangaysCheckbox.addEventListener('change', function() {
                    const barangayCheckboxes = document.querySelectorAll('input[name="selectedBarangays[]"]');
                    barangayCheckboxes.forEach(checkbox => {
                        if (checkbox.value !== 'all') {
                            checkbox.checked = this.checked;
                        }
                    });
                });
            }
            
            // Handle individual barangay checkboxes
            const individualBarangayCheckboxes = document.querySelectorAll('input[name="selectedBarangays[]"][value!="all"]');
            individualBarangayCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    if (!this.checked && allBarangaysCheckbox) {
                        allBarangaysCheckbox.checked = false;
                    }
                });
            });
        }

        function populateSeniorsList(searchTerm = '') {
            const seniorsList = document.getElementById('seniorsList');
            const filteredSeniors = seniorsData.filter(senior => 
                senior.name.toLowerCase().includes(searchTerm.toLowerCase())
            );
            
            let html = '';
            filteredSeniors.forEach(senior => {
                html += `
                    <div class="senior-item">
                        <input type="checkbox" id="senior_${senior.id}" name="selectedSeniors[]" value="${senior.id}" class="senior-checkbox">
                        <label for="senior_${senior.id}" class="senior-name">${senior.name} (${senior.barangay})</label>
                    </div>
                `;
            });
            
            if (filteredSeniors.length === 0) {
                html = '<div class="senior-item"><span class="senior-name">No senior citizens found</span></div>';
            }
            
            seniorsList.innerHTML = html;
        }

        function filterSeniorsList(searchTerm) {
            populateSeniorsList(searchTerm);
        }

        function getRecipientSelectionData() {
            const selectedTypes = [];
            const recipientCheckboxes = document.querySelectorAll('input[name="recipientTypes[]"]:checked');
            
            recipientCheckboxes.forEach(checkbox => {
                selectedTypes.push(checkbox.value);
            });
            
            let recipientData = {
                types: selectedTypes,
                barangays: [],
                categories: []
            };
            
            // Get selected barangays if barangay filter is enabled
            if (selectedTypes.includes('barangay')) {
                const barangayCheckboxes = document.querySelectorAll('input[name="selectedBarangays[]"]:checked');
                barangayCheckboxes.forEach(checkbox => {
                    recipientData.barangays.push(checkbox.value);
                });
            }
            
            // Get selected categories if category filter is enabled
            if (selectedTypes.includes('category')) {
                const categoryCheckboxes = document.querySelectorAll('input[name="selectedCategories[]"]:checked');
                categoryCheckboxes.forEach(checkbox => {
                    recipientData.categories.push(checkbox.value);
                });
            }
            
            return recipientData;
        }
        
        function validateRecipientSelection(recipientData) {
            // Check if at least one recipient type is selected
            if (!recipientData.types || recipientData.types.length === 0) {
                alert('Please select at least one recipient type.');
                return false;
            }
            
            // If barangay filter is selected, ensure at least one barangay is chosen
            if (recipientData.types.includes('barangay')) {
                if (!recipientData.barangays || recipientData.barangays.length === 0) {
                    alert('Please select at least one barangay.');
                    return false;
                }
            }
            
            // If category filter is selected, ensure at least one category is chosen
            if (recipientData.types.includes('category')) {
                if (!recipientData.categories || recipientData.categories.length === 0) {
                    alert('Please select at least one category.');
                    return false;
                }
            }
            
            return true;
        }
        
        function getNotificationMessage(recipientData) {
            if (recipientData.types.includes('all')) {
                return 'All senior citizens will be notified.';
            }
            
            let messages = [];
            
            if (recipientData.types.includes('barangay') && recipientData.barangays.length > 0) {
                const barangayCount = recipientData.barangays.includes('all') ? 'all' : recipientData.barangays.length;
                const barangayText = barangayCount === 1 ? 'barangay' : 'barangays';
                if (barangayCount === 'all') {
                    messages.push('Senior citizens from all barangays');
                } else {
                    messages.push(`Senior citizens from ${barangayCount} selected ${barangayText}`);
                }
            }
            
            if (recipientData.types.includes('category') && recipientData.categories.length > 0) {
                const categoryNames = {
                    'pension': 'Pension Recipients',
                    'id_applicants': 'ID Applicants',
                    'benefit_applicants': 'Benefit Applicants'
                };
                const categoryLabels = recipientData.categories.map(cat => categoryNames[cat]).join(', ');
                messages.push(categoryLabels);
            }
            
            if (messages.length === 0) {
                return 'Recipients will be notified.';
            }
            
            return messages.join(' and ') + ' will be notified.';
        }

        function renderCalendar() {
            if (currentView === 'month') {
                renderMonthView();
            } else if (currentView === 'week') {
                renderWeekView();
            } else if (currentView === 'day') {
                renderDayView();
            }
            updateCalendarTitle();
            // Keep the month/year dropdowns aligned with the displayed date
            syncDropdownsWithCurrentDate();
        }

        function renderMonthView() {
            console.log('Rendering month view');
            const calendarDays = document.getElementById('mainCalendarDays');
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth();

            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());

            let html = '';
            
            for (let i = 0; i < 42; i++) {
                const date = new Date(startDate);
                date.setDate(startDate.getDate() + i);
                
                const isOtherMonth = date.getMonth() !== month;
                const isToday = isSameDate(date, new Date());
                const dayEvents = getEventsForDate(date);
                const eventClass = dayEvents.length ? `has-event ${dayEvents[0].type}-bg` : '';
                
                html += `
                    <div class="calendar-day ${isOtherMonth ? 'other-month' : ''} ${isToday ? 'today' : ''} ${eventClass}" 
                         onclick="selectDate('${formatDateForInput(date)}')">
                        <div class="day-number">${date.getDate()}</div>
                        <div class="day-events">
                            ${dayEvents.map(event => `
                                <div class="day-event ${event.type}" title="${event.title}" onclick="window.location.href='/Events/${event.id}'">
                                    <div class="event-title">${event.title}</div>
                                    <div class="event-actions">
                                        <a href="/Events/${event.id}" class="view-link" title="View Event Details" onclick="event.stopPropagation();">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                        ${dayEvents.length ? `<div class="event-label" title="${dayEvents[0].title}">${dayEvents[0].title}<br><a href="/Events/${dayEvents[0].id}" class="event-view-link" onclick="event.stopPropagation();" title="View Event Details"><i class="fas fa-eye"></i> View Details</a></div>` : ''}
                    </div>
                `;
            }
            
            calendarDays.innerHTML = html;
            console.log('Calendar HTML generated:', html.substring(0, 200) + '...');
            console.log('Calendar days element:', calendarDays);
            console.log('Number of day elements created:', calendarDays.children.length);
        }

        function renderWeekView() {
            // Week view implementation
            document.getElementById('weekDays').innerHTML = '<div>Week view coming soon...</div>';
        }

        function renderDayView() {
            // Day view implementation
            document.getElementById('dayHeader').innerHTML = '<div>Day view coming soon...</div>';
        }

        function formatDateForInput(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        function selectDate(date) {
            document.getElementById('eventDate').value = date;
            document.getElementById('eventTime').value = '09:00';
            openEventModal();
        }

        function getEventsForDate(date) {
            const formattedDate = formatDateForInput(date);
            return events.filter(event => event.date === formattedDate);
        }

        function isSameDate(date1, date2) {
            return date1.toDateString() === date2.toDateString();
        }

        function updateCalendarTitle() {
            const options = { year: 'numeric', month: 'long' };
            document.getElementById('calendarTitle').textContent = currentDate.toLocaleDateString('en-US', options);
        }

        function previousMonth() {
                currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar();
        }

        function nextMonth() {
                currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar();
        }

        function goToToday() {
            currentDate = new Date();
            renderCalendar();
        }

        function changeMonth() {
            const monthSelector = document.getElementById('monthSelector');
            currentDate.setMonth(parseInt(monthSelector.value));
            renderCalendar();
        }

        function changeYear() {
            const yearSelector = document.getElementById('yearSelector');
            currentDate.setFullYear(parseInt(yearSelector.value));
            renderCalendar();
        }

        // Ensure month/year selectors reflect the currentDate
        function syncDropdownsWithCurrentDate() {
            const monthSelector = document.getElementById('monthSelector');
            const yearSelector = document.getElementById('yearSelector');
            if (!monthSelector || !yearSelector) return;

            const month = currentDate.getMonth();
            const year = currentDate.getFullYear();

            // If the current year isn't present, append it
            let yearExists = false;
            for (let i = 0; i < yearSelector.options.length; i++) {
                if (parseInt(yearSelector.options[i].value) === year) {
                    yearExists = true;
                    break;
                }
            }
            if (!yearExists) {
                const opt = document.createElement('option');
                opt.value = String(year);
                opt.textContent = String(year);
                yearSelector.appendChild(opt);
            }

            monthSelector.value = String(month);
            yearSelector.value = String(year);
        }

        function setView(view) {
            currentView = view;
            document.querySelectorAll('.view-btn').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            document.querySelectorAll('.calendar-view').forEach(view => view.classList.remove('active'));
            document.getElementById(view + 'View').classList.add('active');
            renderCalendar();
        }

        function selectDate(date) {
            document.getElementById('eventDate').value = date;
            openEventModal();
        }

        // Modal functions
        function openEventModal() {
            document.getElementById('eventModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closeEventModal() {
            document.getElementById('eventModal').style.display = 'none';
            document.body.style.overflow = 'auto';
            document.getElementById('eventForm').reset();
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('eventModal');
            if (event.target === modal) {
                closeEventModal();
            }
        }

        // Form submission
        document.getElementById('eventForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate required fields
            const eventTitle = document.getElementById('eventTitle').value.trim();
            const eventType = document.getElementById('eventType').value;
            const eventDate = document.getElementById('eventDate').value;
            const eventTime = document.getElementById('eventTime').value;
            const eventLocation = document.getElementById('eventLocation').value.trim();
            
            if (!eventTitle) {
                alert('Please enter an event title.');
                document.getElementById('eventTitle').focus();
                return;
            }
            
            if (!eventType) {
                alert('Please select an event type.');
                document.getElementById('eventType').focus();
                return;
            }
            
            if (!eventDate) {
                alert('Please select an event date.');
                document.getElementById('eventDate').focus();
                return;
            }
            
            if (!eventTime) {
                alert('Please select an event time.');
                document.getElementById('eventTime').focus();
                return;
            }
            
            if (!eventLocation) {
                alert('Please enter an event location.');
                document.getElementById('eventLocation').focus();
                return;
            }
            
            // Validate date is not in the past
            const selectedDate = new Date(eventDate + 'T' + eventTime);
            const currentDate = new Date();
            if (selectedDate < currentDate) {
                alert('Please select a future date and time for the event.');
                document.getElementById('eventDate').focus();
                return;
            }
            
            // Get recipient selection data
            const recipientData = getRecipientSelectionData();
            
            // Validate recipient selection
            if (!validateRecipientSelection(recipientData)) {
                return;
            }
            
            // Create FormData for server submission
            const formData = new FormData();
            formData.append('title', document.getElementById('eventTitle').value);
            formData.append('event_type', document.getElementById('eventType').value);
            formData.append('event_date', document.getElementById('eventDate').value);
            formData.append('start_time', document.getElementById('eventTime').value);
            formData.append('end_time', document.getElementById('eventEndTime').value);
            formData.append('description', document.getElementById('eventDescription').value);
            formData.append('location', document.getElementById('eventLocation').value);
            formData.append('organizer', document.getElementById('eventOrganizer').value);
            formData.append('contact_person', document.getElementById('eventContactPerson').value);
            formData.append('contact_number', document.getElementById('eventContactNumber').value);
            formData.append('_token', document.querySelector('meta[name="csrf-token"]').getAttribute('content'));

            // Submit to server
            fetch('/Events', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (response.ok) {
                    // Success - reload the page to show updated events
                    closeEventModal();
                    location.reload();
                } else {
                    throw new Error('Server error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error saving event. Please try again.');
            });
        });
    </script>
  </x-head>
</x-sidebar>

